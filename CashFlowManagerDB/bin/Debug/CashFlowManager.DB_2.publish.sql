/*
Deployment script for C:\USERS\BRETT.JACOBSEN\DOCUMENTS\VISUAL STUDIO 2012\PROJECTS\CASHFLOWMANAGER\CASHFLOWMANAGER\APP_DATA\CASHFLOWMANAGER.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "C:\USERS\BRETT.JACOBSEN\DOCUMENTS\VISUAL STUDIO 2012\PROJECTS\CASHFLOWMANAGER\CASHFLOWMANAGER\APP_DATA\CASHFLOWMANAGER.MDF"
:setvar DefaultFilePrefix "C_\USERS\BRETT.JACOBSEN\DOCUMENTS\VISUAL STUDIO 2012\PROJECTS\CASHFLOWMANAGER\CASHFLOWMANAGER\APP_DATA\CASHFLOWMANAGER.MDF_"
:setvar DefaultDataPath "C:\Users\Brett.jacobsen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\v11.0\"
:setvar DefaultLogPath "C:\Users\Brett.jacobsen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\v11.0\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Schedule]...';


GO
CREATE TABLE [dbo].[Schedule] (
    [Id]   INT            IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (255) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

INSERT INTO Schedule(Name) VALUES ('One Off')
INSERT INTO Schedule(Name) VALUES ('Daily')
INSERT INTO Schedule(Name) VALUES ('Weekly')
INSERT INTO Schedule(Name) VALUES ('Fortnightly')
INSERT INTO Schedule(Name) VALUES ('Monthly')
INSERT INTO Schedule (Name) VALUES('Yearly')
GO

GO
PRINT N'Update complete.';


GO
