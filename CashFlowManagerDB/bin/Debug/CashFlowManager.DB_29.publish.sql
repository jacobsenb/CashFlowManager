/*
Deployment script for CashFlowManager

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CashFlowManager"
:setvar DefaultFilePrefix "CashFlowManager"
:setvar DefaultDataPath "C:\Users\Brett.jacobsen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\v11.0\"
:setvar DefaultLogPath "C:\Users\Brett.jacobsen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\v11.0\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


IF EXISTS (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME='Transaction')
BEGIN
	DELETE FROM [Transaction]
	DROP TABLE [Transaction]
END
GO

IF EXISTS (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME='Schedule')
BEGIN
	DELETE FROM  Schedule
	DROP TABLE Schedule
END
GO

IF EXISTS (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME='TransactionType')
BEGIN
	DELETE FROM TransactionType
	DROP TABLE TransactionType
END
GO

IF EXISTS (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME='BankAccount')
BEGIN
	DELETE FROM BankAccount
	DROP TABLE BankAccount
END
GO

IF EXISTS (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME='Client')
BEGIN
	DELETE FROM Client
	DROP TABLE Client
END
GO

IF EXISTS (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME='Practice')
BEGIN
	DELETE FROM Practice
	DROP TABLE Practice
END
GO





GO

GO
PRINT N'Dropping UQ__UserProf__C9F284563515B290...';


GO
ALTER TABLE [dbo].[UserProfile] DROP CONSTRAINT [UQ__UserProf__C9F284563515B290];


GO
PRINT N'Altering [dbo].[UserProfile]...';


GO
ALTER TABLE [dbo].[UserProfile] ALTER COLUMN [UserName] NVARCHAR (MAX) NULL;


GO
ALTER TABLE [dbo].[UserProfile]
    ADD [PracticeId] UNIQUEIDENTIFIER NULL,
        [Email]      NVARCHAR (500)   NULL;


GO
PRINT N'Creating [dbo].[BankAccount]...';


GO
CREATE TABLE [dbo].[BankAccount] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [AccountName]   NVARCHAR (255)   NULL,
    [AccountNumber] NVARCHAR (255)   NULL,
    [Balance]       DECIMAL (18, 2)  NULL,
    [ClientId]      UNIQUEIDENTIFIER NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Client]...';


GO
CREATE TABLE [dbo].[Client] (
    [Id]         UNIQUEIDENTIFIER NOT NULL,
    [Name]       NVARCHAR (255)   NULL,
    [PracticeId] UNIQUEIDENTIFIER NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Practice]...';


GO
CREATE TABLE [dbo].[Practice] (
    [Id]   UNIQUEIDENTIFIER NOT NULL,
    [Name] NVARCHAR (255)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Schedule]...';


GO
CREATE TABLE [dbo].[Schedule] (
    [Id]       UNIQUEIDENTIFIER NOT NULL,
    [Name]     NVARCHAR (255)   NULL,
    [Sequence] INT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Transaction]...';


GO
CREATE TABLE [dbo].[Transaction] (
    [Id]                UNIQUEIDENTIFIER NOT NULL,
    [Narration]         NVARCHAR (500)   NULL,
    [Amount]            DECIMAL (18, 2)  NULL,
    [ScheduleId]        UNIQUEIDENTIFIER NOT NULL,
    [TransactionTypeId] UNIQUEIDENTIFIER NOT NULL,
    [ClientId]          UNIQUEIDENTIFIER NOT NULL,
    [StartDate]         DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TransactionType]...';


GO
CREATE TABLE [dbo].[TransactionType] (
    [Id]       UNIQUEIDENTIFIER NOT NULL,
    [Name]     VARCHAR (255)    NULL,
    [Sequence] INT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating FK_BankAccount_Client...';


GO
ALTER TABLE [dbo].[BankAccount] WITH NOCHECK
    ADD CONSTRAINT [FK_BankAccount_Client] FOREIGN KEY ([ClientId]) REFERENCES [dbo].[Client] ([Id]);


GO
PRINT N'Creating FK_Client_Practice...';


GO
ALTER TABLE [dbo].[Client] WITH NOCHECK
    ADD CONSTRAINT [FK_Client_Practice] FOREIGN KEY ([PracticeId]) REFERENCES [dbo].[Practice] ([Id]);


GO
PRINT N'Creating FK_Transaction_Schedule...';


GO
ALTER TABLE [dbo].[Transaction] WITH NOCHECK
    ADD CONSTRAINT [FK_Transaction_Schedule] FOREIGN KEY ([ScheduleId]) REFERENCES [dbo].[Schedule] ([Id]);


GO
PRINT N'Creating FK_Transaction_Client...';


GO
ALTER TABLE [dbo].[Transaction] WITH NOCHECK
    ADD CONSTRAINT [FK_Transaction_Client] FOREIGN KEY ([ClientId]) REFERENCES [dbo].[Client] ([Id]);


GO
PRINT N'Creating FK_Transaction_TransactionType...';


GO
ALTER TABLE [dbo].[Transaction] WITH NOCHECK
    ADD CONSTRAINT [FK_Transaction_TransactionType] FOREIGN KEY ([TransactionTypeId]) REFERENCES [dbo].[TransactionType] ([Id]);


GO
PRINT N'Creating FK_UserProfile_Practice...';


GO
ALTER TABLE [dbo].[UserProfile] WITH NOCHECK
    ADD CONSTRAINT [FK_UserProfile_Practice] FOREIGN KEY ([PracticeId]) REFERENCES [dbo].[Practice] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/



INSERT INTO TransactionType VALUES ('445CDD4E-CCFA-41F0-89A4-771275881DEA','Expense',1)
INSERT INTO TransactionType VALUES ('B7FBF3D0-3EF8-4465-AF4E-E0C8D230E13C','Income',2)
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[BankAccount] WITH CHECK CHECK CONSTRAINT [FK_BankAccount_Client];

ALTER TABLE [dbo].[Client] WITH CHECK CHECK CONSTRAINT [FK_Client_Practice];

ALTER TABLE [dbo].[Transaction] WITH CHECK CHECK CONSTRAINT [FK_Transaction_Schedule];

ALTER TABLE [dbo].[Transaction] WITH CHECK CHECK CONSTRAINT [FK_Transaction_Client];

ALTER TABLE [dbo].[Transaction] WITH CHECK CHECK CONSTRAINT [FK_Transaction_TransactionType];

ALTER TABLE [dbo].[UserProfile] WITH CHECK CHECK CONSTRAINT [FK_UserProfile_Practice];


GO
PRINT N'Update complete.';


GO
