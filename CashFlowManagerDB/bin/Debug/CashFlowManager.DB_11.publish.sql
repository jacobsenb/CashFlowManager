/*
Deployment script for C:\USERS\BRETT.JACOBSEN\DOCUMENTS\VISUAL STUDIO 2012\PROJECTS\CASHFLOWMANAGER\CASHFLOWMANAGER\APP_DATA\CASHFLOWMANAGER.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "C:\USERS\BRETT.JACOBSEN\DOCUMENTS\VISUAL STUDIO 2012\PROJECTS\CASHFLOWMANAGER\CASHFLOWMANAGER\APP_DATA\CASHFLOWMANAGER.MDF"
:setvar DefaultFilePrefix "C_\USERS\BRETT.JACOBSEN\DOCUMENTS\VISUAL STUDIO 2012\PROJECTS\CASHFLOWMANAGER\CASHFLOWMANAGER\APP_DATA\CASHFLOWMANAGER.MDF_"
:setvar DefaultDataPath "C:\Users\Brett.jacobsen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\v11.0\"
:setvar DefaultLogPath "C:\Users\Brett.jacobsen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\v11.0\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Transaction].[ClientId] on table [dbo].[Transaction] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[Transaction].[TransactionTypeId] on table [dbo].[Transaction] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column ScheduleId on table [dbo].[Transaction] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Transaction])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key 48bf4f1c-b97c-4b1f-bcf8-18f3f0f187bc is skipped, element [dbo].[Transaction].[TransactionType] (SqlSimpleColumn) will not be renamed to TransactionTypeId';


GO
PRINT N'Dropping FK_Transaction_Schedule...';


GO
ALTER TABLE [dbo].[Transaction] DROP CONSTRAINT [FK_Transaction_Schedule];


GO
PRINT N'Altering [dbo].[Schedule]...';


GO
ALTER TABLE [dbo].[Schedule]
    ADD [Sequence] INT NULL;


GO
PRINT N'Altering [dbo].[Transaction]...';


GO
ALTER TABLE [dbo].[Transaction] ALTER COLUMN [ScheduleId] UNIQUEIDENTIFIER NOT NULL;


GO
ALTER TABLE [dbo].[Transaction]
    ADD [TransactionTypeId] UNIQUEIDENTIFIER NOT NULL,
        [ClientId]          UNIQUEIDENTIFIER NOT NULL;


GO
PRINT N'Creating [dbo].[Client]...';


GO
CREATE TABLE [dbo].[Client] (
    [Id]         UNIQUEIDENTIFIER NOT NULL,
    [Name]       NVARCHAR (255)   NULL,
    [PracticeId] UNIQUEIDENTIFIER NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Practice]...';


GO
CREATE TABLE [dbo].[Practice] (
    [Id]   UNIQUEIDENTIFIER NOT NULL,
    [Name] NVARCHAR (255)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TransactionType]...';


GO
CREATE TABLE [dbo].[TransactionType] (
    [Id]       UNIQUEIDENTIFIER NOT NULL,
    [Name]     VARCHAR (255)    NULL,
    [Sequence] INT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating FK_Transaction_Schedule...';


GO
ALTER TABLE [dbo].[Transaction] WITH NOCHECK
    ADD CONSTRAINT [FK_Transaction_Schedule] FOREIGN KEY ([ScheduleId]) REFERENCES [dbo].[Schedule] ([Id]);


GO
PRINT N'Creating FK_Client_Practice...';


GO
ALTER TABLE [dbo].[Client] WITH NOCHECK
    ADD CONSTRAINT [FK_Client_Practice] FOREIGN KEY ([PracticeId]) REFERENCES [dbo].[Practice] ([Id]);


GO
PRINT N'Creating FK_Transaction_Client...';


GO
ALTER TABLE [dbo].[Transaction] WITH NOCHECK
    ADD CONSTRAINT [FK_Transaction_Client] FOREIGN KEY ([ClientId]) REFERENCES [dbo].[Client] ([Id]);


GO
PRINT N'Creating FK_Transaction_TransactionType...';


GO
ALTER TABLE [dbo].[Transaction] WITH NOCHECK
    ADD CONSTRAINT [FK_Transaction_TransactionType] FOREIGN KEY ([TransactionTypeId]) REFERENCES [dbo].[TransactionType] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '48bf4f1c-b97c-4b1f-bcf8-18f3f0f187bc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('48bf4f1c-b97c-4b1f-bcf8-18f3f0f187bc')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

DELETE FROM  Schedule

INSERT INTO Schedule(Id,Name) VALUES ('7D839FDC-C273-4BE4-B9F2-028F818E53BB','One Off')
INSERT INTO Schedule(Id,Name) VALUES ('295DC3D3-8EBF-4D26-A8A8-6EC19B9C06E0','Daily')
INSERT INTO Schedule(Id,Name) VALUES ('A0D9330C-8E55-441A-B31F-6679C657B3A0','Weekly')
INSERT INTO Schedule(Id,Name) VALUES ('9384E00A-9332-4DA6-9D8E-E849CB0000A0','Fortnightly')
INSERT INTO Schedule(Id,Name) VALUES ('67160043-4E9E-4E3F-9181-C501ADF48C49','Monthly')
INSERT INTO Schedule (Id,Name) VALUES('3CDD6BF9-FA88-41E6-A288-03A80F494C4C','Yearly')
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Transaction] WITH CHECK CHECK CONSTRAINT [FK_Transaction_Schedule];

ALTER TABLE [dbo].[Client] WITH CHECK CHECK CONSTRAINT [FK_Client_Practice];

ALTER TABLE [dbo].[Transaction] WITH CHECK CHECK CONSTRAINT [FK_Transaction_Client];

ALTER TABLE [dbo].[Transaction] WITH CHECK CHECK CONSTRAINT [FK_Transaction_TransactionType];


GO
PRINT N'Update complete.';


GO
